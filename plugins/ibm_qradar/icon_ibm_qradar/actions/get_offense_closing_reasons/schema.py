# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get Offense's Closing Reasons"


class Input:
    FIELDS = "fields"
    FILTER = "filter"
    INCLUDE_DELETED = "include_deleted"
    INCLUDE_RESERVED = "include_reserved"
    RANGE = "range"


class Output:
    DATA = "data"


class GetOffenseClosingReasonsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(
        """
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "fields": {
      "type": "string",
      "title": "Fields",
      "description": "Use this parameter to specify which fields you would like to get back in the response. Fields that are not named are excluded. Specify subfields in brackets and multiple fields in the same object are separated by commas",
      "order": 3
    },
    "filter": {
      "type": "string",
      "title": "Filter",
      "description": "This parameter is used to restrict the elements in a list base on the contents of various fields",
      "order": 2
    },
    "include_deleted": {
      "type": "boolean",
      "title": "Include Deleted",
      "description": "If true, deleted closing reasons are included in the response. Defaults to false. Deleted closing reasons cannot be used to close an offense",
      "order": 4
    },
    "include_reserved": {
      "type": "boolean",
      "title": "Include Reserved",
      "description": "If true, reserved closing reasons are included in the response. Defaults to false. Reserved closing reasons cannot be used to close an offense",
      "order": 5
    },
    "range": {
      "type": "string",
      "title": "Range",
      "description": "Use this parameter to restrict the number of elements that are returned in the list to a specified range. The list is indexed starting at zero",
      "order": 1
    }
  }
}
    """
    )

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetOffenseClosingReasonsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(
        """
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "Offense Closing Reasons",
      "description": "JSON Data of the Offense Closing Reasons",
      "items": {
        "$ref": "#/definitions/closing_reason"
      },
      "order": 1
    }
  },
  "definitions": {
    "closing_reason": {
      "type": "object",
      "title": "closing_reason",
      "properties": {
        "id": {
          "type": "integer",
          "title": "Id",
          "description": "Id",
          "order": 1
        },
        "is_deleted": {
          "type": "boolean",
          "title": "Is Deleted",
          "description": "Is Deleted",
          "order": 2
        },
        "is_reserved": {
          "type": "boolean",
          "title": "Is Reserved",
          "description": "Is Reserved",
          "order": 3
        },
        "text": {
          "type": "string",
          "title": "text",
          "description": "text",
          "order": 4
        }
      }
    }
  }
}
    """
    )

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
